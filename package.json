{
  "name": "love_gifts_api",
  "version": "1.0.0",
  "description": "- Form đăng nhập với các trường: email/username và mật khẩu.\r     - Tùy chọn đăng nhập bằng tài khoản mạng xã hội (Google, Facebook).\r     - Tính năng quên mật khẩu, gửi email khôi phục.\r   #### **Backend:**\r     - Kiểm tra và xác thực thông tin người dùng từ cơ sở dữ liệu.\r     - Sử dụng JWT (JSON Web Token) để duy trì phiên đăng nhập.\r     - Lưu trữ thông tin đăng nhập và bảo mật mật khẩu (hash mật khẩu bằng các phương pháp như bcrypt).\r     - Lưu trữ thông tin đăng nhập của người dùng (cookie hoặc session).\r ### Ghép đôi (Matchmaking):\r   #### **Mục đích:** Ghép đôi người dùng với người yêu hoặc đối tác để có thể tương tác và trao đổi quà tặng.\r   #### **User Interface (UI):**\r     - Tùy chọn nhập email của đối phương để yêu cầu ghép đôi.\r     - Gửi thông báo hoặc email yêu cầu chấp nhận ghép đôi.\r     - Hiển thị trạng thái ghép đôi: đã ghép hoặc đang chờ phản hồi.\r   #### **Backend:**  \r     - Cơ sở dữ liệu để quản lý thông tin ghép đôi, bao gồm user_id của cả hai người.\r     - Hệ thống xác nhận hoặc từ chối yêu cầu ghép đôi.\r     - Đồng bộ hóa dữ liệu giữa hai người dùng khi ghép đôi thành công (chia sẻ danh sách Wishlist, điểm thưởng, tasks, v.v.).\r ### Wishlist:\r   #### **Mục đích:** Danh sách quà tặng mà người dùng muốn nhận từ đối phương.\r   #### **User Interface (UI):**\r     - Giao diện cho phép người dùng thêm sản phẩm vào wishlist.\r     - Hiển thị danh sách wishlist của cả hai người dùng sau khi ghép đôi.\r   #### **Backend:**\r     - Cơ sở dữ liệu lưu trữ danh sách wishlist của từng người dùng.\r     - Cập nhật và xóa món quà trong wishlist khi người dùng thêm hoặc xóa.\r     - Đồng bộ hóa wishlist với tính năng điểm thưởng và gợi ý quà tặng.\r ### Tasks đối phương cần làm để đổi điểm:\r   #### **Mục đích:** Đối phương hoàn thành các nhiệm vụ để tích điểm đổi quà.\r   #### **User Interface (UI):**\r     - Hiển thị danh sách nhiệm vụ (tasks) cần làm để kiếm điểm (ví dụ: làm việc nhà, viết thư tình, nấu ăn, v.v.).\r     - Người dùng có thể tự tạo tasks hoặc sử dụng danh sách gợi ý tasks từ hệ thống.\r     - Hiển thị điểm thưởng và số điểm cần thiết để đổi quà trong wishlist.\r   #### **Backend:**\r     - Cơ sở dữ liệu quản lý các tasks và điểm tương ứng với từng nhiệm vụ.\r     - Cơ chế xác thực nhiệm vụ đã hoàn thành (có thể yêu cầu người yêu xác nhận).\r     - Hệ thống cộng điểm khi hoàn thành nhiệm vụ và trừ điểm khi đổi quà.\r     - Tích hợp với hệ thống quà tặng để hiển thị các món quà có thể đổi bằng số điểm đã tích lũy.\r ### Gợi ý quà tặng (Gift Suggestions):\r   #### **Mục đích:** Đưa ra các gợi ý quà tặng dựa trên sở thích của người yêu hoặc sự kiện.\r   #### **User Interface (UI):**\r     - Form nhập sở thích, tính cách của người yêu hoặc chọn các dịp đặc biệt (sinh nhật, lễ tình nhân, kỷ niệm, v.v.).\r     - Hiển thị danh sách các món quà được gợi ý theo từng tiêu chí (sở thích, sự kiện, mức giá, v.v.).\r     - Tích hợp nút \"Thêm vào wishlist\" hoặc \"Mua ngay\".\r   #### **Backend:**\r     - Thu thập dữ liệu về sở thích của người nhận quà và sử dụng các thuật toán đề xuất (recommendation algorithms) để gợi ý quà tặng.\r     - Kết nối với các nhà cung cấp hoặc cửa hàng để hiển thị quà tặng khả dụng và liên kết đặt hàng.\r     - Lưu trữ thông tin các quà tặng gợi ý và cá nhân hóa các đề xuất dựa trên hành vi của người dùng (mua hàng, wishlist, tasks).\r ## 2. Technology\r Backend: SQL,  Database PostgresSQL  and NestJS, Prisma\r ## 3. Framework",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "nodemon src/index.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "cors": "^2.8.5",
    "express": "^4.21.1",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.8.1",
    "nodemon": "^3.1.7"
  }
}
